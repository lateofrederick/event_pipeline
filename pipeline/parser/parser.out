Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term POINTER term
Rule 2     expression -> term PPOINTER term
Rule 3     expression -> expression POINTER term
Rule 4     expression -> expression PPOINTER term
Rule 5     expression -> descriptor POINTER term
Rule 6     expression -> descriptor PPOINTER term
Rule 7     expression -> term
Rule 8     term -> task
Rule 9     descriptor -> DESCRIPTOR
Rule 10    task -> TASKNAME
Rule 11    task -> task LPAREN expression SEPERATOR expression RPAREN

Terminals, with rules where they appear

COMMENT              : 
DESCRIPTOR           : 9
LPAREN               : 11
POINTER              : 1 3 5
PPOINTER             : 2 4 6
RPAREN               : 11
SEPERATOR            : 11
TASKNAME             : 10
error                : 

Nonterminals, with rules where they appear

descriptor           : 5 6
expression           : 3 4 11 11 0
task                 : 8 11
term                 : 1 1 2 2 3 4 5 6 7

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term POINTER term
    (2) expression -> . term PPOINTER term
    (3) expression -> . expression POINTER term
    (4) expression -> . expression PPOINTER term
    (5) expression -> . descriptor POINTER term
    (6) expression -> . descriptor PPOINTER term
    (7) expression -> . term
    (8) term -> . task
    (9) descriptor -> . DESCRIPTOR
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    DESCRIPTOR      shift and go to state 5
    TASKNAME        shift and go to state 6

    expression                     shift and go to state 1
    term                           shift and go to state 2
    descriptor                     shift and go to state 3
    task                           shift and go to state 4

state 1

    (0) S' -> expression .
    (3) expression -> expression . POINTER term
    (4) expression -> expression . PPOINTER term

    POINTER         shift and go to state 7
    PPOINTER        shift and go to state 8


state 2

    (1) expression -> term . POINTER term
    (2) expression -> term . PPOINTER term
    (7) expression -> term .

  ! shift/reduce conflict for POINTER resolved as shift
  ! shift/reduce conflict for PPOINTER resolved as shift
    POINTER         shift and go to state 9
    PPOINTER        shift and go to state 10
    $end            reduce using rule 7 (expression -> term .)
    SEPERATOR       reduce using rule 7 (expression -> term .)
    RPAREN          reduce using rule 7 (expression -> term .)

  ! POINTER         [ reduce using rule 7 (expression -> term .) ]
  ! PPOINTER        [ reduce using rule 7 (expression -> term .) ]


state 3

    (5) expression -> descriptor . POINTER term
    (6) expression -> descriptor . PPOINTER term

    POINTER         shift and go to state 11
    PPOINTER        shift and go to state 12


state 4

    (8) term -> task .
    (11) task -> task . LPAREN expression SEPERATOR expression RPAREN

    POINTER         reduce using rule 8 (term -> task .)
    PPOINTER        reduce using rule 8 (term -> task .)
    $end            reduce using rule 8 (term -> task .)
    SEPERATOR       reduce using rule 8 (term -> task .)
    RPAREN          reduce using rule 8 (term -> task .)
    LPAREN          shift and go to state 13


state 5

    (9) descriptor -> DESCRIPTOR .

    POINTER         reduce using rule 9 (descriptor -> DESCRIPTOR .)
    PPOINTER        reduce using rule 9 (descriptor -> DESCRIPTOR .)


state 6

    (10) task -> TASKNAME .

    LPAREN          reduce using rule 10 (task -> TASKNAME .)
    POINTER         reduce using rule 10 (task -> TASKNAME .)
    PPOINTER        reduce using rule 10 (task -> TASKNAME .)
    $end            reduce using rule 10 (task -> TASKNAME .)
    SEPERATOR       reduce using rule 10 (task -> TASKNAME .)
    RPAREN          reduce using rule 10 (task -> TASKNAME .)


state 7

    (3) expression -> expression POINTER . term
    (8) term -> . task
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    TASKNAME        shift and go to state 6

    term                           shift and go to state 14
    task                           shift and go to state 4

state 8

    (4) expression -> expression PPOINTER . term
    (8) term -> . task
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    TASKNAME        shift and go to state 6

    term                           shift and go to state 15
    task                           shift and go to state 4

state 9

    (1) expression -> term POINTER . term
    (8) term -> . task
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    TASKNAME        shift and go to state 6

    term                           shift and go to state 16
    task                           shift and go to state 4

state 10

    (2) expression -> term PPOINTER . term
    (8) term -> . task
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    TASKNAME        shift and go to state 6

    term                           shift and go to state 17
    task                           shift and go to state 4

state 11

    (5) expression -> descriptor POINTER . term
    (8) term -> . task
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    TASKNAME        shift and go to state 6

    term                           shift and go to state 18
    task                           shift and go to state 4

state 12

    (6) expression -> descriptor PPOINTER . term
    (8) term -> . task
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    TASKNAME        shift and go to state 6

    term                           shift and go to state 19
    task                           shift and go to state 4

state 13

    (11) task -> task LPAREN . expression SEPERATOR expression RPAREN
    (1) expression -> . term POINTER term
    (2) expression -> . term PPOINTER term
    (3) expression -> . expression POINTER term
    (4) expression -> . expression PPOINTER term
    (5) expression -> . descriptor POINTER term
    (6) expression -> . descriptor PPOINTER term
    (7) expression -> . term
    (8) term -> . task
    (9) descriptor -> . DESCRIPTOR
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    DESCRIPTOR      shift and go to state 5
    TASKNAME        shift and go to state 6

    task                           shift and go to state 4
    expression                     shift and go to state 20
    term                           shift and go to state 2
    descriptor                     shift and go to state 3

state 14

    (3) expression -> expression POINTER term .

    POINTER         reduce using rule 3 (expression -> expression POINTER term .)
    PPOINTER        reduce using rule 3 (expression -> expression POINTER term .)
    $end            reduce using rule 3 (expression -> expression POINTER term .)
    SEPERATOR       reduce using rule 3 (expression -> expression POINTER term .)
    RPAREN          reduce using rule 3 (expression -> expression POINTER term .)


state 15

    (4) expression -> expression PPOINTER term .

    POINTER         reduce using rule 4 (expression -> expression PPOINTER term .)
    PPOINTER        reduce using rule 4 (expression -> expression PPOINTER term .)
    $end            reduce using rule 4 (expression -> expression PPOINTER term .)
    SEPERATOR       reduce using rule 4 (expression -> expression PPOINTER term .)
    RPAREN          reduce using rule 4 (expression -> expression PPOINTER term .)


state 16

    (1) expression -> term POINTER term .

    POINTER         reduce using rule 1 (expression -> term POINTER term .)
    PPOINTER        reduce using rule 1 (expression -> term POINTER term .)
    $end            reduce using rule 1 (expression -> term POINTER term .)
    SEPERATOR       reduce using rule 1 (expression -> term POINTER term .)
    RPAREN          reduce using rule 1 (expression -> term POINTER term .)


state 17

    (2) expression -> term PPOINTER term .

    POINTER         reduce using rule 2 (expression -> term PPOINTER term .)
    PPOINTER        reduce using rule 2 (expression -> term PPOINTER term .)
    $end            reduce using rule 2 (expression -> term PPOINTER term .)
    SEPERATOR       reduce using rule 2 (expression -> term PPOINTER term .)
    RPAREN          reduce using rule 2 (expression -> term PPOINTER term .)


state 18

    (5) expression -> descriptor POINTER term .

    POINTER         reduce using rule 5 (expression -> descriptor POINTER term .)
    PPOINTER        reduce using rule 5 (expression -> descriptor POINTER term .)
    $end            reduce using rule 5 (expression -> descriptor POINTER term .)
    SEPERATOR       reduce using rule 5 (expression -> descriptor POINTER term .)
    RPAREN          reduce using rule 5 (expression -> descriptor POINTER term .)


state 19

    (6) expression -> descriptor PPOINTER term .

    POINTER         reduce using rule 6 (expression -> descriptor PPOINTER term .)
    PPOINTER        reduce using rule 6 (expression -> descriptor PPOINTER term .)
    $end            reduce using rule 6 (expression -> descriptor PPOINTER term .)
    SEPERATOR       reduce using rule 6 (expression -> descriptor PPOINTER term .)
    RPAREN          reduce using rule 6 (expression -> descriptor PPOINTER term .)


state 20

    (11) task -> task LPAREN expression . SEPERATOR expression RPAREN
    (3) expression -> expression . POINTER term
    (4) expression -> expression . PPOINTER term

    SEPERATOR       shift and go to state 21
    POINTER         shift and go to state 7
    PPOINTER        shift and go to state 8


state 21

    (11) task -> task LPAREN expression SEPERATOR . expression RPAREN
    (1) expression -> . term POINTER term
    (2) expression -> . term PPOINTER term
    (3) expression -> . expression POINTER term
    (4) expression -> . expression PPOINTER term
    (5) expression -> . descriptor POINTER term
    (6) expression -> . descriptor PPOINTER term
    (7) expression -> . term
    (8) term -> . task
    (9) descriptor -> . DESCRIPTOR
    (10) task -> . TASKNAME
    (11) task -> . task LPAREN expression SEPERATOR expression RPAREN

    DESCRIPTOR      shift and go to state 5
    TASKNAME        shift and go to state 6

    task                           shift and go to state 4
    expression                     shift and go to state 22
    term                           shift and go to state 2
    descriptor                     shift and go to state 3

state 22

    (11) task -> task LPAREN expression SEPERATOR expression . RPAREN
    (3) expression -> expression . POINTER term
    (4) expression -> expression . PPOINTER term

    RPAREN          shift and go to state 23
    POINTER         shift and go to state 7
    PPOINTER        shift and go to state 8


state 23

    (11) task -> task LPAREN expression SEPERATOR expression RPAREN .

    LPAREN          reduce using rule 11 (task -> task LPAREN expression SEPERATOR expression RPAREN .)
    POINTER         reduce using rule 11 (task -> task LPAREN expression SEPERATOR expression RPAREN .)
    PPOINTER        reduce using rule 11 (task -> task LPAREN expression SEPERATOR expression RPAREN .)
    $end            reduce using rule 11 (task -> task LPAREN expression SEPERATOR expression RPAREN .)
    SEPERATOR       reduce using rule 11 (task -> task LPAREN expression SEPERATOR expression RPAREN .)
    RPAREN          reduce using rule 11 (task -> task LPAREN expression SEPERATOR expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for POINTER in state 2 resolved as shift
WARNING: shift/reduce conflict for PPOINTER in state 2 resolved as shift
