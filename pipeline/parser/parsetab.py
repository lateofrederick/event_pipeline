# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "COMMENT DESCRIPTOR LPAREN POINTER PPOINTER RPAREN SEPERATOR TASKNAME\n    expression : term POINTER term\n                | term PPOINTER term\n                | expression POINTER term\n                | expression PPOINTER term\n                | descriptor POINTER term\n                | descriptor PPOINTER term\n    \n    expression : term\n    \n    term : task\n    \n    descriptor : DESCRIPTOR\n    \n    task : TASKNAME\n    \n     task :  task LPAREN expression SEPERATOR expression RPAREN\n    "

_lr_action_items = {
    "DESCRIPTOR": (
        [
            0,
            13,
            21,
        ],
        [
            5,
            5,
            5,
        ],
    ),
    "TASKNAME": (
        [
            0,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            21,
        ],
        [
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
        ],
    ),
    "$end": (
        [
            1,
            2,
            4,
            6,
            14,
            15,
            16,
            17,
            18,
            19,
            23,
        ],
        [
            0,
            -7,
            -8,
            -10,
            -3,
            -4,
            -1,
            -2,
            -5,
            -6,
            -11,
        ],
    ),
    "POINTER": (
        [
            1,
            2,
            3,
            4,
            5,
            6,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            22,
            23,
        ],
        [
            7,
            9,
            11,
            -8,
            -9,
            -10,
            -3,
            -4,
            -1,
            -2,
            -5,
            -6,
            7,
            7,
            -11,
        ],
    ),
    "PPOINTER": (
        [
            1,
            2,
            3,
            4,
            5,
            6,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            22,
            23,
        ],
        [
            8,
            10,
            12,
            -8,
            -9,
            -10,
            -3,
            -4,
            -1,
            -2,
            -5,
            -6,
            8,
            8,
            -11,
        ],
    ),
    "SEPERATOR": (
        [
            2,
            4,
            6,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            23,
        ],
        [
            -7,
            -8,
            -10,
            -3,
            -4,
            -1,
            -2,
            -5,
            -6,
            21,
            -11,
        ],
    ),
    "RPAREN": (
        [
            2,
            4,
            6,
            14,
            15,
            16,
            17,
            18,
            19,
            22,
            23,
        ],
        [
            -7,
            -8,
            -10,
            -3,
            -4,
            -1,
            -2,
            -5,
            -6,
            23,
            -11,
        ],
    ),
    "LPAREN": (
        [
            4,
            6,
            23,
        ],
        [
            13,
            -10,
            -11,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "expression": (
        [
            0,
            13,
            21,
        ],
        [
            1,
            20,
            22,
        ],
    ),
    "term": (
        [
            0,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            21,
        ],
        [
            2,
            14,
            15,
            16,
            17,
            18,
            19,
            2,
            2,
        ],
    ),
    "descriptor": (
        [
            0,
            13,
            21,
        ],
        [
            3,
            3,
            3,
        ],
    ),
    "task": (
        [
            0,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            21,
        ],
        [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    (
        "expression -> term POINTER term",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        10,
    ),
    (
        "expression -> term PPOINTER term",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        11,
    ),
    (
        "expression -> expression POINTER term",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        12,
    ),
    (
        "expression -> expression PPOINTER term",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        13,
    ),
    (
        "expression -> descriptor POINTER term",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        14,
    ),
    (
        "expression -> descriptor PPOINTER term",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        15,
    ),
    ("expression -> term", "expression", 1, "p_expression_term", "grammar.py", 22),
    ("term -> task", "term", 1, "p_task", "grammar.py", 29),
    ("descriptor -> DESCRIPTOR", "descriptor", 1, "p_descriptor", "grammar.py", 36),
    ("task -> TASKNAME", "task", 1, "p_task_taskname", "grammar.py", 43),
    (
        "task -> task LPAREN expression SEPERATOR expression RPAREN",
        "task",
        6,
        "p_task_grouped",
        "grammar.py",
        50,
    ),
]
