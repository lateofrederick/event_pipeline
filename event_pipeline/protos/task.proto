syntax = "proto3";

package event_pipeline;

// The task execution service definition
service TaskExecutor {
  // Execute a task remotely
  rpc Execute (TaskRequest) returns (TaskResponse) {}
  
  // Stream task results (for long running tasks)
  rpc ExecuteStream (TaskRequest) returns (stream TaskStatus) {}
}

// Task execution request
message TaskRequest {
  string task_id = 1;
  bytes fn = 2;
  string name = 3;
  bytes args = 4;     // Serialized arguments
  bytes kwargs = 5;   // Serialized keyword arguments
}

// Task execution response
message TaskResponse {
  bool success = 1;
  bytes result = 2;   // Serialized result
  string error = 3;   // Error message if any
}

// Task execution status for streaming
message TaskStatus {
  enum Status {
    PENDING = 0;
    RUNNING = 1;
    COMPLETED = 2;
    FAILED = 3;
  }
  Status status = 1;
  bytes result = 2;   // Serialized result if completed
  string message = 3; // Status message or error
}